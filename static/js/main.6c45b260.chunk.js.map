{"version":3,"sources":["img/me.jpg","img/anagram.png","img/maze.png","img/hexmaze.png","img/bpmchart.png","img/conics.png","content.js","index.js"],"names":["info","img","me","img_alt","title","paragraphs","cards","id","img_anagram","description","href","img_maze","img_maze_hex","img_bpm","img_conics","Card","props","cardElement","React","createRef","waitingForFrame","noDraw","mouseOutWaiting","mouseOutTimeout","this","resizeObserver","observe","current","unobserve","window","setTimeout","style","transform","onMouseOut","console","log","clearTimeout","onMouseOver","e","requestAnimationFrame","renderTiltFrame","tiltX","nativeEvent","offsetX","width","tiltY","offsetY","height","className","content","ref","onMouseMove","fontSize","src","alt","Component","Projects","cardStates","hovered","state","ResizeObserver","entries","handleCardResize","isOver","setState","entry","currentCardState","target","borderBoxSize","inlineSize","blockSize","contentRect","projHasHover","Object","values","reduce","a","card","cardState","push","handleCardHover","Info","forEach","p","i","Page","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c45b260.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/me.af32898c.jpg\";","export default __webpack_public_path__ + \"static/media/anagram.db3e1542.png\";","export default __webpack_public_path__ + \"static/media/maze.c3ef103b.png\";","export default __webpack_public_path__ + \"static/media/hexmaze.3f645810.png\";","export default __webpack_public_path__ + \"static/media/bpmchart.b100412e.png\";","export default __webpack_public_path__ + \"static/media/conics.df1e1deb.png\";","import me from \"./img/me.jpg\";\r\nimport img_anagram from \"./img/anagram.png\";\r\nimport img_maze from \"./img/maze.png\";\r\nimport img_maze_hex from \"./img/hexmaze.png\";\r\nimport img_bpm from \"./img/bpmchart.png\";\r\nimport img_conics from \"./img/conics.png\";\r\n\r\nexport const info = {\r\n\timg: me,\r\n\timg_alt: \"A photo of me!\",\r\n\ttitle: \"Cameron Fraser\",\r\n\tparagraphs: [\r\n\t\t\"Hi! I'm Cameron. I'm a Computer Science student from Seattle who's been programming for 10ish years in all sorts of languages.\",\r\n\t\t\"Sometimes I make things for the web. Here are some things I've made for the web.\",\r\n\t\t\"Note that this is not a complete list, and is semi-regularly modified. Last update: 04/27/21\"\r\n\t]\r\n}\r\n\r\nexport const cards = [\r\n\t{\r\n\t\tid: \"Anagrams\",\r\n\t\ttitle: \"Anagrams\",\r\n\t\timg: img_anagram,\r\n\t\timg_alt: \"Red and blue colored boxes, indicating the differing numbers of letters between two phrases.\",\r\n\t\tdescription: \"A current experiment in which I try to build the best anagram-writing tool I can. It's not much at the moment, but I'm actively adding features. (e.g. dictionary, word reordering)\",\r\n\t\thref: \"https://frasercl.github.io/anagram/\"\r\n\t},\r\n\t{\r\n\t\tid: \"MazeGenerator\",\r\n\t\ttitle: \"Mazes\",\r\n\t\timg: img_maze,\r\n\t\timg_alt: \"A screenshot of an incomplete maze, in the process of generation.\",\r\n\t\tdescription: \"A little experiment which generates and solves a maze on a canvas, and animates its process while doing it.\",\r\n\t\thref: \"https://frasercl.github.io/mazes/\"\r\n\t},\r\n\t{\r\n\t\tid: \"HexMazeGenerator\",\r\n\t\ttitle: \"Hex Mazes\",\r\n\t\timg: img_maze_hex,\r\n\t\timg_alt: \"A screenshot of a maze with hexagonal passageways, in the process of generation.\",\r\n\t\tdescription: \"A quick adaptation of the mazes project with hexagonal tiles.\",\r\n\t\thref: \"https://frasercl.github.io/mazes/hex.html\"\r\n\t},\r\n\t{\r\n\t\tid: \"BPM\",\r\n\t\ttitle: \"BPM Finder\",\r\n\t\timg: img_bpm,\r\n\t\timg_alt: \"A screenshot of the graph pane in the tempo tapper tool, which plots the time between successive taps.\",\r\n\t\tdescription: \"A tool I made a long time ago to find the tempo of a song.\",\r\n\t\thref: \"https://frasercl.github.io/bpm/\"\r\n\t},\r\n\t{\r\n\t\tid: \"Conics\",\r\n\t\ttitle: \"Conics\",\r\n\t\timg: img_conics,\r\n\t\timg_alt: \"A graph of assorted conic sections, showing foci and directrices.\",\r\n\t\tdescription: \"Another one from a while ago. This project was written for a high school math class, and interactively graphs conic sections chosen with the arrow keys.\",\r\n\t\thref: \"https://frasercl.github.io/conics/\"\r\n\t}\r\n];","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as content from \"./content.js\";\r\n\r\nconst MAX_CARD_TILT = 4.5;\r\nconst CARD_SCALE_FACTOR = 1.06;\r\n\r\nclass Card extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.cardElement = React.createRef();\r\n\t\tthis.waitingForFrame = false;\r\n\t\tthis.noDraw = false;\r\n\t\tthis.mouseOutWaiting = false;\r\n\t\tthis.mouseOutTimeout = 0;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.resizeObserver.observe(this.cardElement.current);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.resizeObserver.unobserve(this.cardElement.current);\r\n\t}\r\n\r\n\tonMouseOut() {\r\n\t\t//mouseout/mouseover may both fire when mouse moves between children;\r\n\t\t//mouseOutWaiting and mouseOutTimeout clear out false positives\r\n\t\tthis.mouseOutWaiting = true;\r\n\t\tthis.mouseOutTimeout = window.setTimeout(() => {\r\n\t\t\tthis.cardElement.current.style.transform = \"rotateX(0deg) rotateY(0deg) rotateZ(0deg) scale(1)\";\r\n\t\t\tthis.mouseOutWaiting = false;\r\n\t\t\t//Pause drawing briefly after mouseout, to avoid stray frames\r\n\t\t\t//\"sticking\" element in transformed state\r\n\t\t\tthis.noDraw = true;\r\n\t\t\twindow.setTimeout(() => { this.noDraw = false }, 50);\r\n\t\t\tthis.props.onMouseOut();\r\n\t\t}, 10);\r\n\t}\r\n\r\n\tonMouseOver() {\r\n\t\tif (this.mouseOutWaiting) {\r\n\t\t\t//False positive; halt waiting mouseout handler\r\n\t\t\tconsole.log(\"Prevented mouseout\");\r\n\t\t\twindow.clearTimeout(this.mouseOutTimeout);\r\n\t\t\tthis.mouseOutWaiting = false;\r\n\t\t} else {\r\n\t\t\tthis.props.onMouseOver();\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseMove(e) {\r\n\t\tif(!this.waitingForFrame) {\r\n\t\t\twindow.requestAnimationFrame(() => this.renderTiltFrame(e));\r\n\t\t\tthis.waitingForFrame = true;\r\n\t\t}\r\n\t}\r\n\r\n\trenderTiltFrame(e) {\r\n\t\tif(!this.noDraw) {\r\n\t\t\tlet tiltX = (e.nativeEvent.offsetX * 2 / this.props.width - 1) * MAX_CARD_TILT;\r\n\t\t\tlet tiltY = (e.nativeEvent.offsetY * 2 / this.props.height - 1) * -MAX_CARD_TILT;\r\n\t\t\tthis.cardElement.current.style.transform = `rotateY(${tiltX}deg) rotateX(${tiltY}deg) rotateZ(0deg) scale(${CARD_SCALE_FACTOR})`;\r\n\t\t}\r\n\t\tthis.waitingForFrame = false;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"card_container\">\r\n\t\t\t\t<a\r\n\t\t\t\t\tclassName=\"card\"\r\n\t\t\t\t\tid={this.props.content.id}\r\n\t\t\t\t\tref={this.cardElement}\r\n\t\t\t\t\thref={this.props.content.href}\r\n\t\t\t\t\tonMouseOver={e => this.onMouseOver(e)}\r\n\t\t\t\t\tonMouseOut={e => this.onMouseOut(e)}\r\n\t\t\t\t\tonMouseMove={e => this.onMouseMove(e)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"card-content\" style={{fontSize: this.props.width / 24}}>\r\n\t\t\t\t\t\t<div className=\"card-content-image\">\r\n\t\t\t\t\t\t\t<img src={this.props.content.img} alt={this.props.content.img_alt} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-content-title\">{this.props.content.title}</div>\r\n\t\t\t\t\t\t<div className=\"card-content-description\">{this.props.content.description}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/////////////////////////////////////////////////\r\n\r\nclass Projects extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tlet cardStates = {};\r\n\t\tfor(const card of this.props.cards) {\r\n\t\t\tcardStates[card.id] = {\r\n\t\t\t\thovered: false,\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\t\t}\r\n\t\tthis.state = {cardStates};\r\n\t\tthis.resizeObserver = new ResizeObserver(entries => this.handleCardResize(entries));\r\n\t}\r\n\r\n\thandleCardHover(id, isOver) {\r\n\t\tlet cardStates = {...this.state.cardStates};\r\n\t\tcardStates[id].hovered = isOver;\r\n\t\tthis.setState({cardStates});\r\n\t}\r\n\r\n\thandleCardResize(entries) {\r\n\t\tlet cardStates = {...this.state.cardStates};\r\n\t\tfor(const entry of entries) {\r\n\t\t\tlet currentCardState = cardStates[entry.target.id];\r\n\t\t\tif(entry.borderBoxSize) {\r\n\t\t\t\tcurrentCardState.width = entry.borderBoxSize[0].inlineSize;\r\n\t\t\t\tcurrentCardState.height = entry.borderBoxSize[0].blockSize;\r\n\t\t\t} else {\r\n\t\t\t\tcurrentCardState.width = entry.contentRect.width;\r\n\t\t\t\tcurrentCardState.height = entry.contentRect.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({cardStates});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst projHasHover = Object.values(this.state.cardStates).reduce((a, {hovered}) => a || hovered, false);\r\n\t\tlet cards = [];\r\n\r\n\t\tfor(const card of this.props.cards) {\r\n\t\t\tconst cardState = this.state.cardStates[card.id];\r\n\t\t\tcards.push(<Card\r\n\t\t\t\tkey={card.id}\r\n\t\t\t\twidth={cardState.width}\r\n\t\t\t\theight={cardState.height}\r\n\t\t\t\tonMouseOver={() => this.handleCardHover(card.id, true)}\r\n\t\t\t\tonMouseOut={() => this.handleCardHover(card.id, false)}\r\n\t\t\t\t//TODO: passing this reference feels inelegant. Fix?\r\n\t\t\t\tresizeObserver={this.resizeObserver}\r\n\t\t\t\tcontent={card}\r\n\t\t\t/>);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"projectCol\">\r\n\t\t\t\t<div className=\"projectCol-inner\">\r\n\t\t\t\t\t<div className={`projectCol-filter${projHasHover ? \" filter-on\" : \"\"}`} />\r\n\t\t\t\t\t<div className=\"projectCol-cards\">\r\n\t\t\t\t\t\t{cards}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction Info(props) {\r\n\tlet paragraphs = [];\r\n\tprops.content.paragraphs.forEach((p, i) => {\r\n\t\tparagraphs.push(<p className=\"infoCol-body infoCol-inmargin\" key={\"paragraph\"+i}>{p}</p>);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"infoCol\">\r\n\t\t\t<div>\r\n\t\t\t\t<img className=\"infoCol-image infoCol-inmargin\" src={props.content.img} alt={props.content.img_alt}></img>\r\n\t\t\t\t<div className=\"infoCol-title\">{props.content.title}</div>\r\n\t\t\t\t{paragraphs}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction Page(props) {\r\n\treturn (\r\n\t\t<div className=\"page_container\">\r\n\t\t\t<Info content={content.info} />\r\n\t\t\t<Projects cards={content.cards} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nReactDOM.render(<Page />, document.getElementById(\"root\"));"],"sourceRoot":""}